
import javax.swing.JPanel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.Timer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Owner
 */
public class BezierCurves extends javax.swing.JFrame {

    /**
     * Creates new form BezierCurves
     */
    public BezierCurves() {
        initComponents();
        clock.start();
    }
    //public ArrayList points;
    public int x;
    public int y;
   //public ArrayList<Point> result = new ArrayList<>();
    public ArrayList<Point> points1 = new ArrayList<>();
    public Color[] color = {Color.RED, Color.BLUE, Color.BLACK, Color.PINK, Color.GREEN, Color.ORANGE, Color.YELLOW, Color.MAGENTA};
    public double t = 0;
    public class MyJPanel extends JPanel
    {
        public void paint(Graphics g)
        {
            
                super.paint(g);
                
                ArrayList<Point> p2 = points1;
                for (int i = 0; i < points1.size() - 1; i++) {
                    g.setColor(color[i]);
                    paint1(g, p2);
                    p2 = pts(p2, t);
                    
                    
                }
//               Point p3 = eval(points1, 0);
                for(double t1 = 0; t1 < t; t1+=.01)
                {
//                    Point p4 = eval(points1, t1);
//                    g.drawLine((int)p4.x, (int)p4.y, (int)p4.x + 1, (int)p4.y + 1);
                }
                
        }
    }
    public void paint1(Graphics g, ArrayList<Point> p)
    {
        
            for (int j = 0; j < p.size() - 1; j++) {
                //g.fillOval((int) points1.get(j).x, (int) points1.get(j).y, 5, 5);
                g.drawLine((int) p.get(j).x, (int) p.get(j).y, (int) p.get(j + 1).x, (int) p.get(j + 1).y);
            }
            
        
    }
     public Timer clock = new Timer(50, new ActionListener() {  // 50ms delay between ticks
        public void actionPerformed(ActionEvent e) {
            tick();               // Write a method named tick to advance your game
            jPanel1.repaint();

        }
    });  // panel is the name of the JPanel that displays the game

    public void tick()
    {
        
        t = t+.01;
        if(t>=1)
            t=0;
            
    }
//    public Point eval(ArrayList<Point> p, double t)
//    {
//        if(p.size()==1){
//            return p.get(0);
//        }
//        return eval(pts(p, t), t);
//    }
    public ArrayList<Point> pts(ArrayList<Point> points, double t)
    {
        ArrayList<Point> result = new ArrayList<>();
        for(int i=0; i<points.size()-1; i++)
        {
            Point p1 = points.get(i);
            Point p2 = points.get(i + 1);
            result.add(p1.interp(p2, t));
        }
        return result;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new MyJPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 661, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
          
        x = evt.getX();
        y = evt.getY();
        Point p = new Point(x,y);
        points1.add(p);
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BezierCurves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BezierCurves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BezierCurves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BezierCurves.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BezierCurves().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
